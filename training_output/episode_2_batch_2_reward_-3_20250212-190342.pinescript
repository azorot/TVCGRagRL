//@version=6

// Define global variables
var longEntry = 0;
var shortEntry = 0;
var longExit = 0;
var shortExit = 0;
var buyVolume = 50;
var sellVolume = 20;
var stopLossLevel = 1;
var takeProfitLevel = 3;
var riskTolerance = 0.1; // 1% risk tolerance

// Check if account balance is sufficient to place a position
function checkBalance() {
    return ta.crossover(Price, ta.SMA(close)) or ta.crossunder(Price, ta.SMA(close));
}

// Function to place a buy order
function buyOrder(symbol) {
    if (checkBalance()) {
        longEntry := Order("Buy", symbol, 100);
        Plot(Symbol(), Symbol(), "Buy", Color.Green);
    }
}

// Function to place a sell order
function sellOrder(symbol) {
    if (checkBalance()) {
        shortExit := Order("Sell", symbol, -100);
        Plot(Symbol(), Symbol(), "Sell", Color.Red);
    }
}

// Main strategy function
strategy(title="Basic Pine Script v6 Strategy", overlay=true)
{
    // Check current price and adjust entry/exit levels
    if (Price < ta.SMA(close)) {
        stopLossLevel := 0.5; // Set a lower stop loss level for short positions
    } else if (Price > ta.SMA(close)) {
        takeProfitLevel = 1; // Set a higher take profit level for long positions
    }

    // Loop through timeframes to place orders based on technical indicators
    for (var i = 0; i < periods(1); i++) {
        if (i == 0 && Strategy.Trend() == "up") {
            buyOrder("Buy");
            print("Buying at", Symbol());
        } else if (i == 0 && Strategy.Trend() == "down") {
            sellOrder("Sell");
            print("Selling at", Symbol());
        }
    }

    // Calculate position size based on account balance or risk tolerance
    var accountBalance = AccountBalance(true);
    var tradeVolume = max(sellVolume, buyVolume);

    // Check if trade volume is sufficient to place a position
    if (tradeVolume > 0) {
        // Example: Place buy order when account balance is $1000 and risk tolerance is 5%
        if (accountBalance >= RiskTolerance * 1000) {
            longEntry := Order("Buy", Symbol(), 100);
            Plot(Symbol(), Symbol(), "Buy", Color.Green);
        }
    } else {
        // Example: Place sell order when account balance is less than $1000 and risk tolerance is 5%
        if (accountBalance < RiskTolerance * 1000) {
            shortExit := Order("Sell", Symbol(), -100);
            Plot(Symbol(), Symbol(), "Sell", Color.Red);
        }
    }

    // Optionally, add a condition for long or short positions based on price
    // For example: Place a buy order if the current high is above the close and below the open
    // if (Price > ta.HIGH() && Price < ta.OHLC()) {
    //     BuyOrder("Buy");
    // }
}